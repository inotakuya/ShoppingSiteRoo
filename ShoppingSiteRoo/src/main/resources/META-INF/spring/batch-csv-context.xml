<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

	<import resource="applicationContext.xml" />
	<import resource="applicationContext-jpa.xml"/>

	<batch:job id="job1">
		<batch:step id="jobstep">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="itemConsumerReader" writer="itemConsumerWriter"
					commit-interval="100"></batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="itemConsumerReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="," />
						<property name="names" value="consumerName,password,email,point" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="targetType" value="jp.com.inotaku.domain.Consumer"></property>
					</bean>
				</property>
			</bean>
		</property>
		<property name="resource" value="classpath:#{jobParameters['inputFile']}" />
		<property name="linesToSkip" value="1"></property>
	</bean>

	<bean id="itemConsumerWriter"
		class="org.springframework.batch.item.adapter.ItemWriterAdapter">
		<property name="targetObject" ref="consumerWriter" />
		<property name="targetMethod" value="write"></property>
	</bean>
	

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="isolationLevelForCreate" value="ISOLATION_DEFAULT"></property>
	</bean>

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository"></property>
	</bean>

	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script
			location="classpath:/org/springframework/batch/core/schema-hsqldb.sql" />
	</jdbc:initialize-database>
	
</beans>
